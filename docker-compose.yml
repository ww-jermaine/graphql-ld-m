
services:
  app:
    build:
      context: .
      target: builder
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: npm run dev
    depends_on:
      graphdb-init:
        condition: service_completed_successfully

  graphdb:
    image: ontotext/graphdb:10.6.2
    container_name: graphdb-graphql-demo
    ports:
      - "7200:7200"
    environment:
      - GDB_HEAP_SIZE=4g
      - GDB_JAVA_OPTS=-Dgraphdb.workbench.cors.enable=true
    volumes:
      - graphdb_data:/opt/graphdb/home
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7200/rest/repositories"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: /opt/graphdb/dist/bin/graphdb

  graphdb-init:
    image: curlimages/curl:latest
    depends_on:
      graphdb:
        condition: service_healthy
    volumes:
      - ./graphdb-init:/import
    command: >
      sh -c "
      until curl -f http://graphdb:7200/rest/repositories > /dev/null 2>&1; do
        echo 'Waiting for GraphDB...';
        sleep 5;
      done;
      echo 'GraphDB is ready, creating repository...';
      curl -X POST -H 'Content-Type: multipart/form-data' -F 'config=@/import/graphql-demo-config.ttl' http://graphdb:7200/rest/repositories || echo 'Repository already exists or creation failed';
      echo 'Repository setup complete';
      "
    restart: "no"

volumes:
  graphdb_data:
